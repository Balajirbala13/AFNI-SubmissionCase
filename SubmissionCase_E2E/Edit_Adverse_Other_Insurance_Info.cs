///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Edit_Adverse_Other_Insurance_Info recording.
    /// </summary>
    [TestModule("92b71ac9-710a-4e5a-a6bb-2f747b0ef345", ModuleType.Recording, 1)]
    public partial class Edit_Adverse_Other_Insurance_Info : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Edit_Adverse_Other_Insurance_Info instance = new Edit_Adverse_Other_Insurance_Info();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Edit_Adverse_Other_Insurance_Info()
        {
            OAT_IL_CompName = "";
            OAT_IL_PolicyNumber = "";
            OAT_IL_ClaimNumber = "";
            OAT_IL_ContactName = "";
            OAT_IL_State = "";
            OAT_IL_Address1 = "";
            OAT_IL_Address2 = "";
            OAT_IL_City = "";
            OAT_IL_Zip = "";
            OAT_IL_UseType = "";
            OAT_IL_PhoneType = "";
            OAT_IL_Source = "";
            OAT_IL_PhoneNumber = "";
            OAT_IL_ExtNo = "";
            Edit_OAT_IL_CompName = "Edit_OAT_IL_CompName";
            Edit_OAT_IL_PolicyNumber = "Edit_OAT_IL_PolicyNumber";
            Edit_OAT_IL_ClaimNumber = "Edit_OAT_IL_ClaimNumber";
            Edit_OAT_IL_ContactName = "Edit_OAT_IL_ContactName";
            Edit_OAT_IL_State = "MA";
            Edit_OAT_IL_Address1 = "Edit_OAT_IL_Address1";
            Edit_OAT_IL_Address2 = "Edit_OAT_IL_Address2";
            Edit_OAT_IL_City = "Edit_OAT_IL_City";
            Edit_OAT_IL_Zip = "20008";
            Edit_OAT_IL_UseType = "Personal";
            Edit_OAT_IL_PhoneType = "Other";
            Edit_OAT_IL_Source = "Skip Trace";
            Edit_OAT_IL_PhoneNumber = "9600095008";
            Edit_OAT_IL_ExtNo = "67890";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Edit_Adverse_Other_Insurance_Info Instance
        {
            get { return instance; }
        }

#region Variables

        string _OAT_IL_CompName;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_CompName.
        /// </summary>
        [TestVariable("fc373ba8-9c40-4e03-9baf-f4621a6e70e3")]
        public string OAT_IL_CompName
        {
            get { return _OAT_IL_CompName; }
            set { _OAT_IL_CompName = value; }
        }

        string _OAT_IL_PolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_PolicyNumber.
        /// </summary>
        [TestVariable("6302d079-018b-4a08-ba72-23a0a1ea4aa1")]
        public string OAT_IL_PolicyNumber
        {
            get { return _OAT_IL_PolicyNumber; }
            set { _OAT_IL_PolicyNumber = value; }
        }

        string _OAT_IL_ClaimNumber;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_ClaimNumber.
        /// </summary>
        [TestVariable("fffe7a09-5c6a-4240-af78-c226dcf46696")]
        public string OAT_IL_ClaimNumber
        {
            get { return _OAT_IL_ClaimNumber; }
            set { _OAT_IL_ClaimNumber = value; }
        }

        string _OAT_IL_ContactName;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_ContactName.
        /// </summary>
        [TestVariable("0509580c-bad8-4669-94dc-54c60075b687")]
        public string OAT_IL_ContactName
        {
            get { return _OAT_IL_ContactName; }
            set { _OAT_IL_ContactName = value; }
        }

        string _OAT_IL_State;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_State.
        /// </summary>
        [TestVariable("0198100f-2cbf-4076-baa0-5153843fdd3c")]
        public string OAT_IL_State
        {
            get { return _OAT_IL_State; }
            set { _OAT_IL_State = value; }
        }

        string _OAT_IL_Address1;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_Address1.
        /// </summary>
        [TestVariable("cea2333d-e904-458b-bfe4-cd4a4e067ca8")]
        public string OAT_IL_Address1
        {
            get { return _OAT_IL_Address1; }
            set { _OAT_IL_Address1 = value; }
        }

        string _OAT_IL_Address2;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_Address2.
        /// </summary>
        [TestVariable("f3467ecf-97e8-4b23-843c-66be9ef5f7d3")]
        public string OAT_IL_Address2
        {
            get { return _OAT_IL_Address2; }
            set { _OAT_IL_Address2 = value; }
        }

        string _OAT_IL_City;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_City.
        /// </summary>
        [TestVariable("22c76047-d3b0-48e7-bd4e-ecf8fb667c46")]
        public string OAT_IL_City
        {
            get { return _OAT_IL_City; }
            set { _OAT_IL_City = value; }
        }

        string _OAT_IL_Zip;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_Zip.
        /// </summary>
        [TestVariable("78e60211-f9cf-42ba-9fa7-7bed028a5d24")]
        public string OAT_IL_Zip
        {
            get { return _OAT_IL_Zip; }
            set { _OAT_IL_Zip = value; }
        }

        string _OAT_IL_UseType;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_UseType.
        /// </summary>
        [TestVariable("75841a7d-8b17-47c5-b6f6-adac143c6f7a")]
        public string OAT_IL_UseType
        {
            get { return _OAT_IL_UseType; }
            set { _OAT_IL_UseType = value; }
        }

        string _OAT_IL_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_PhoneType.
        /// </summary>
        [TestVariable("e41d2d8f-bd07-47e3-bc2e-14cbef3b4be1")]
        public string OAT_IL_PhoneType
        {
            get { return _OAT_IL_PhoneType; }
            set { _OAT_IL_PhoneType = value; }
        }

        string _OAT_IL_Source;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_Source.
        /// </summary>
        [TestVariable("cc473d44-4a17-495a-a9aa-f4361240755d")]
        public string OAT_IL_Source
        {
            get { return _OAT_IL_Source; }
            set { _OAT_IL_Source = value; }
        }

        string _OAT_IL_PhoneNumber;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_PhoneNumber.
        /// </summary>
        [TestVariable("309a5e8a-4e95-4bef-b63d-8ccca4c1c0d6")]
        public string OAT_IL_PhoneNumber
        {
            get { return _OAT_IL_PhoneNumber; }
            set { _OAT_IL_PhoneNumber = value; }
        }

        string _OAT_IL_ExtNo;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_ExtNo.
        /// </summary>
        [TestVariable("d11ccd51-dcb9-4f5f-82df-38a4cd8e2bde")]
        public string OAT_IL_ExtNo
        {
            get { return _OAT_IL_ExtNo; }
            set { _OAT_IL_ExtNo = value; }
        }

        string _Edit_OAT_IL_CompName;

        /// <summary>
        /// Gets or sets the value of variable Edit_OAT_IL_CompName.
        /// </summary>
        [TestVariable("5e179a93-442d-4cc3-aea6-c23c757c508b")]
        public string Edit_OAT_IL_CompName
        {
            get { return _Edit_OAT_IL_CompName; }
            set { _Edit_OAT_IL_CompName = value; }
        }

        string _Edit_OAT_IL_PolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable Edit_OAT_IL_PolicyNumber.
        /// </summary>
        [TestVariable("4022737c-87e3-44f2-8102-b6747c65d874")]
        public string Edit_OAT_IL_PolicyNumber
        {
            get { return _Edit_OAT_IL_PolicyNumber; }
            set { _Edit_OAT_IL_PolicyNumber = value; }
        }

        string _Edit_OAT_IL_ClaimNumber;

        /// <summary>
        /// Gets or sets the value of variable Edit_OAT_IL_ClaimNumber.
        /// </summary>
        [TestVariable("f4d4a0d6-c40c-4e3a-85f2-9648ae0a1992")]
        public string Edit_OAT_IL_ClaimNumber
        {
            get { return _Edit_OAT_IL_ClaimNumber; }
            set { _Edit_OAT_IL_ClaimNumber = value; }
        }

        string _Edit_OAT_IL_ContactName;

        /// <summary>
        /// Gets or sets the value of variable Edit_OAT_IL_ContactName.
        /// </summary>
        [TestVariable("71791a4b-3787-4866-99e6-d16cf9b3386b")]
        public string Edit_OAT_IL_ContactName
        {
            get { return _Edit_OAT_IL_ContactName; }
            set { _Edit_OAT_IL_ContactName = value; }
        }

        string _Edit_OAT_IL_State;

        /// <summary>
        /// Gets or sets the value of variable Edit_OAT_IL_State.
        /// </summary>
        [TestVariable("66f64f58-948f-483e-8364-157f4fbb75e4")]
        public string Edit_OAT_IL_State
        {
            get { return _Edit_OAT_IL_State; }
            set { _Edit_OAT_IL_State = value; }
        }

        string _Edit_OAT_IL_Address1;

        /// <summary>
        /// Gets or sets the value of variable Edit_OAT_IL_Address1.
        /// </summary>
        [TestVariable("7bb86e38-c0be-4067-aa07-34f66ea7d787")]
        public string Edit_OAT_IL_Address1
        {
            get { return _Edit_OAT_IL_Address1; }
            set { _Edit_OAT_IL_Address1 = value; }
        }

        string _Edit_OAT_IL_Address2;

        /// <summary>
        /// Gets or sets the value of variable Edit_OAT_IL_Address2.
        /// </summary>
        [TestVariable("37478ab7-934f-4a4c-9244-ee6c893b49db")]
        public string Edit_OAT_IL_Address2
        {
            get { return _Edit_OAT_IL_Address2; }
            set { _Edit_OAT_IL_Address2 = value; }
        }

        string _Edit_OAT_IL_City;

        /// <summary>
        /// Gets or sets the value of variable Edit_OAT_IL_City.
        /// </summary>
        [TestVariable("64c74eff-a156-44c7-b3ca-364bd87f9287")]
        public string Edit_OAT_IL_City
        {
            get { return _Edit_OAT_IL_City; }
            set { _Edit_OAT_IL_City = value; }
        }

        string _Edit_OAT_IL_Zip;

        /// <summary>
        /// Gets or sets the value of variable Edit_OAT_IL_Zip.
        /// </summary>
        [TestVariable("05af8715-3f1e-420d-a6c8-34d12a62526b")]
        public string Edit_OAT_IL_Zip
        {
            get { return _Edit_OAT_IL_Zip; }
            set { _Edit_OAT_IL_Zip = value; }
        }

        string _Edit_OAT_IL_UseType;

        /// <summary>
        /// Gets or sets the value of variable Edit_OAT_IL_UseType.
        /// </summary>
        [TestVariable("8d93795d-ee80-4c40-9b44-1f144d1f95dc")]
        public string Edit_OAT_IL_UseType
        {
            get { return _Edit_OAT_IL_UseType; }
            set { _Edit_OAT_IL_UseType = value; }
        }

        string _Edit_OAT_IL_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable Edit_OAT_IL_PhoneType.
        /// </summary>
        [TestVariable("57be2319-0a6a-4ba1-aefe-9d93701bc5d4")]
        public string Edit_OAT_IL_PhoneType
        {
            get { return _Edit_OAT_IL_PhoneType; }
            set { _Edit_OAT_IL_PhoneType = value; }
        }

        string _Edit_OAT_IL_Source;

        /// <summary>
        /// Gets or sets the value of variable Edit_OAT_IL_Source.
        /// </summary>
        [TestVariable("95b27bee-1612-42de-a514-6290ce01a0e9")]
        public string Edit_OAT_IL_Source
        {
            get { return _Edit_OAT_IL_Source; }
            set { _Edit_OAT_IL_Source = value; }
        }

        string _Edit_OAT_IL_PhoneNumber;

        /// <summary>
        /// Gets or sets the value of variable Edit_OAT_IL_PhoneNumber.
        /// </summary>
        [TestVariable("38abc35e-ef6a-48b8-98f8-7c4a8fc15856")]
        public string Edit_OAT_IL_PhoneNumber
        {
            get { return _Edit_OAT_IL_PhoneNumber; }
            set { _Edit_OAT_IL_PhoneNumber = value; }
        }

        string _Edit_OAT_IL_ExtNo;

        /// <summary>
        /// Gets or sets the value of variable Edit_OAT_IL_ExtNo.
        /// </summary>
        [TestVariable("58d243f9-fdb9-4e6a-a282-92c7e2d5ed1c")]
        public string Edit_OAT_IL_ExtNo
        {
            get { return _Edit_OAT_IL_ExtNo; }
            set { _Edit_OAT_IL_ExtNo = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.InsuranceInformation1' at 98;26.", repo.ApplicationUnderTest.InsuranceInformation1Info, new RecordItemIndex(0));
            //repo.ApplicationUnderTest.InsuranceInformation1.Click("98;26");
            //Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$OAT_IL_CompName) on item 'ApplicationUnderTest.OAT_IL_CompName'.", repo.ApplicationUnderTest.OAT_IL_CompNameInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_CompNameInfo, "TagValue", OAT_IL_CompName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", OAT_IL_CompName, new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_OAT_IL_CompName' with focus on 'ApplicationUnderTest.OAT_IL_CompName'.", repo.ApplicationUnderTest.OAT_IL_CompNameInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.OAT_IL_CompName.PressKeys(Edit_OAT_IL_CompName);
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'ApplicationUnderTest.OAT_IL_RentalCompany'.", repo.ApplicationUnderTest.OAT_IL_RentalCompanyInfo, new RecordItemIndex(6));
            //Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_RentalCompanyInfo, "Checked", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='true') on item 'ApplicationUnderTest.OAT_IL_RentalCompany'.", repo.ApplicationUnderTest.OAT_IL_RentalCompanyInfo, new RecordItemIndex(7));
            //Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_RentalCompanyInfo, "Value", "true");
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$OAT_IL_PolicyNumber) on item 'ApplicationUnderTest.OAT_IL_PolicyNumber'.", repo.ApplicationUnderTest.OAT_IL_PolicyNumberInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_PolicyNumberInfo, "TagValue", OAT_IL_PolicyNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", OAT_IL_PolicyNumber, new RecordItemIndex(9));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(10));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_OAT_IL_PolicyNumber' with focus on 'ApplicationUnderTest.OAT_IL_PolicyNumber'.", repo.ApplicationUnderTest.OAT_IL_PolicyNumberInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.OAT_IL_PolicyNumber.PressKeys(Edit_OAT_IL_PolicyNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$OAT_IL_ClaimNumber) on item 'ApplicationUnderTest.OAT_IL_ClaimNumber'.", repo.ApplicationUnderTest.OAT_IL_ClaimNumberInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_ClaimNumberInfo, "TagValue", OAT_IL_ClaimNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", OAT_IL_ClaimNumber, new RecordItemIndex(14));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(15));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(16));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_OAT_IL_ClaimNumber' with focus on 'ApplicationUnderTest.OAT_IL_ClaimNumber'.", repo.ApplicationUnderTest.OAT_IL_ClaimNumberInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.OAT_IL_ClaimNumber.PressKeys(Edit_OAT_IL_ClaimNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$OAT_IL_ContactName) on item 'ApplicationUnderTest.OAT_IL_ContactName'.", repo.ApplicationUnderTest.OAT_IL_ContactNameInfo, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_ContactNameInfo, "TagValue", OAT_IL_ContactName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", OAT_IL_ContactName, new RecordItemIndex(19));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(20));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(21));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_OAT_IL_ContactName' with focus on 'ApplicationUnderTest.OAT_IL_ContactName'.", repo.ApplicationUnderTest.OAT_IL_ContactNameInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.OAT_IL_ContactName.PressKeys(Edit_OAT_IL_ContactName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$OAT_IL_State) on item 'ApplicationUnderTest.OAT_IL_State'.", repo.ApplicationUnderTest.OAT_IL_StateInfo, new RecordItemIndex(23));
            Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_StateInfo, "TagValue", OAT_IL_State);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", OAT_IL_State, new RecordItemIndex(24));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(25));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(26));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_OAT_IL_State' on item 'ApplicationUnderTest.OAT_IL_State'.", repo.ApplicationUnderTest.OAT_IL_StateInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.OAT_IL_State.Element.SetAttributeValue("TagValue", Edit_OAT_IL_State);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$OAT_IL_Address1) on item 'ApplicationUnderTest.OAT_IL_Address1'.", repo.ApplicationUnderTest.OAT_IL_Address1Info, new RecordItemIndex(28));
            Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_Address1Info, "TagValue", OAT_IL_Address1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", OAT_IL_Address1, new RecordItemIndex(29));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(30));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(31));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_OAT_IL_Address1' with focus on 'ApplicationUnderTest.OAT_IL_Address1'.", repo.ApplicationUnderTest.OAT_IL_Address1Info, new RecordItemIndex(32));
            repo.ApplicationUnderTest.OAT_IL_Address1.PressKeys(Edit_OAT_IL_Address1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$OAT_IL_Address2) on item 'ApplicationUnderTest.OAT_IL_Address2'.", repo.ApplicationUnderTest.OAT_IL_Address2Info, new RecordItemIndex(33));
            Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_Address2Info, "TagValue", OAT_IL_Address2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", OAT_IL_Address2, new RecordItemIndex(34));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(35));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(36));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_OAT_IL_Address2' with focus on 'ApplicationUnderTest.OAT_IL_Address2'.", repo.ApplicationUnderTest.OAT_IL_Address2Info, new RecordItemIndex(37));
            repo.ApplicationUnderTest.OAT_IL_Address2.PressKeys(Edit_OAT_IL_Address2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$OAT_IL_City) on item 'ApplicationUnderTest.OAT_IL_City'.", repo.ApplicationUnderTest.OAT_IL_CityInfo, new RecordItemIndex(38));
            Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_CityInfo, "TagValue", OAT_IL_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", OAT_IL_City, new RecordItemIndex(39));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(40));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(41));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_OAT_IL_City' with focus on 'ApplicationUnderTest.OAT_IL_City'.", repo.ApplicationUnderTest.OAT_IL_CityInfo, new RecordItemIndex(42));
            repo.ApplicationUnderTest.OAT_IL_City.PressKeys(Edit_OAT_IL_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$OAT_IL_Zip) on item 'ApplicationUnderTest.OAT_IL_Zip'.", repo.ApplicationUnderTest.OAT_IL_ZipInfo, new RecordItemIndex(43));
            Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_ZipInfo, "TagValue", OAT_IL_Zip);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", OAT_IL_Zip, new RecordItemIndex(44));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(45));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(46));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_OAT_IL_Zip' with focus on 'ApplicationUnderTest.OAT_IL_Zip'.", repo.ApplicationUnderTest.OAT_IL_ZipInfo, new RecordItemIndex(47));
            repo.ApplicationUnderTest.OAT_IL_Zip.PressKeys(Edit_OAT_IL_Zip);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(48));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$OAT_IL_UseType) on item 'ApplicationUnderTest.OAT_IL_UseType'.", repo.ApplicationUnderTest.OAT_IL_UseTypeInfo, new RecordItemIndex(49));
            Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_UseTypeInfo, "TagValue", OAT_IL_UseType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", OAT_IL_UseType, new RecordItemIndex(50));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(51));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(52));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_OAT_IL_UseType' on item 'ApplicationUnderTest.OAT_IL_UseType'.", repo.ApplicationUnderTest.OAT_IL_UseTypeInfo, new RecordItemIndex(53));
            repo.ApplicationUnderTest.OAT_IL_UseType.Element.SetAttributeValue("TagValue", Edit_OAT_IL_UseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$OAT_IL_PhoneType) on item 'ApplicationUnderTest.OAT_IL_PhoneType'.", repo.ApplicationUnderTest.OAT_IL_PhoneTypeInfo, new RecordItemIndex(54));
            Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_PhoneTypeInfo, "TagValue", OAT_IL_PhoneType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", OAT_IL_PhoneType, new RecordItemIndex(55));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(56));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(57));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_OAT_IL_PhoneType' on item 'ApplicationUnderTest.OAT_IL_PhoneType'.", repo.ApplicationUnderTest.OAT_IL_PhoneTypeInfo, new RecordItemIndex(58));
            repo.ApplicationUnderTest.OAT_IL_PhoneType.Element.SetAttributeValue("TagValue", Edit_OAT_IL_PhoneType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$OAT_IL_Source) on item 'ApplicationUnderTest.OAT_IL_Source'.", repo.ApplicationUnderTest.OAT_IL_SourceInfo, new RecordItemIndex(59));
            Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_SourceInfo, "TagValue", OAT_IL_Source);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", OAT_IL_Source, new RecordItemIndex(60));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(61));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(62));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_OAT_IL_Source' on item 'ApplicationUnderTest.OAT_IL_Source'.", repo.ApplicationUnderTest.OAT_IL_SourceInfo, new RecordItemIndex(63));
            repo.ApplicationUnderTest.OAT_IL_Source.Element.SetAttributeValue("TagValue", Edit_OAT_IL_Source);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.OAT_IL_PhoneNumber' and assigning its value to variable 'OAT_IL_PhoneNumber'.", repo.ApplicationUnderTest.OAT_IL_PhoneNumberInfo, new RecordItemIndex(64));
            OAT_IL_PhoneNumber = repo.ApplicationUnderTest.OAT_IL_PhoneNumber.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$OAT_IL_PhoneNumber) on item 'ApplicationUnderTest.OAT_IL_PhoneNumber'.", repo.ApplicationUnderTest.OAT_IL_PhoneNumberInfo, new RecordItemIndex(65));
            Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_PhoneNumberInfo, "TagValue", OAT_IL_PhoneNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", OAT_IL_PhoneNumber, new RecordItemIndex(66));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(67));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(68));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_OAT_IL_PhoneNumber' with focus on 'ApplicationUnderTest.OAT_IL_PhoneNumber'.", repo.ApplicationUnderTest.OAT_IL_PhoneNumberInfo, new RecordItemIndex(69));
            repo.ApplicationUnderTest.OAT_IL_PhoneNumber.PressKeys(Edit_OAT_IL_PhoneNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.OAT_IL_ExtNo' and assigning its value to variable 'OAT_IL_ExtNo'.", repo.ApplicationUnderTest.OAT_IL_ExtNoInfo, new RecordItemIndex(70));
            OAT_IL_ExtNo = repo.ApplicationUnderTest.OAT_IL_ExtNo.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$OAT_IL_ExtNo) on item 'ApplicationUnderTest.OAT_IL_ExtNo'.", repo.ApplicationUnderTest.OAT_IL_ExtNoInfo, new RecordItemIndex(71));
            Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_ExtNoInfo, "TagValue", OAT_IL_ExtNo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", OAT_IL_ExtNo, new RecordItemIndex(72));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(73));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(74));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_OAT_IL_ExtNo' with focus on 'ApplicationUnderTest.OAT_IL_ExtNo'.", repo.ApplicationUnderTest.OAT_IL_ExtNoInfo, new RecordItemIndex(75));
            repo.ApplicationUnderTest.OAT_IL_ExtNo.PressKeys(Edit_OAT_IL_ExtNo);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(76));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Submit_5' at 53;18.", repo.ApplicationUnderTest.Submit_5Info, new RecordItemIndex(77));
            repo.ApplicationUnderTest.Submit_5.Click("53;18");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
