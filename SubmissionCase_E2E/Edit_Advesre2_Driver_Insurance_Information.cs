///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Edit_Advesre2_Driver_Insurance_Information recording.
    /// </summary>
    [TestModule("217ee7f6-d556-440f-93c5-7dc4931ec507", ModuleType.Recording, 1)]
    public partial class Edit_Advesre2_Driver_Insurance_Information : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Edit_Advesre2_Driver_Insurance_Information instance = new Edit_Advesre2_Driver_Insurance_Information();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Edit_Advesre2_Driver_Insurance_Information()
        {
            AD2_IL_InsuranceCompany = "";
            AD2_IL_PolicyNumber = "";
            AD2_IL_ClaimNumber = "";
            AD2_IL_ContactName = "";
            AD2_IL_State = "";
            AD2_IL_Address1 = "";
            AD2_IL_Address2 = "";
            AD2_IL_City = "";
            AD2_IL_Zipcode = "";
            AD2_IL_PhoneUseType = "";
            AD2_IL_PhoneType = "";
            AD2_IL_PhoneSource = "";
            AD2_IL_PhoneNumber = "";
            AD2_IL_EmailUseType = "";
            AD2_IL_EmailSource = "";
            AD2_IL_email = "";
            Edit_AD2_IL_InsuranceCompany = "Edit_AD2_IL_InsuranceCompany";
            Edit_AD2_IL_PolicyNumber = "Edit_AD2_IL_PolicyNumber";
            Edit_AD2_IL_ClaimNumber = "Edit_AD2_IL_ClaimNumber";
            Edit_AD2_IL_ContactName = "Edit_AD2_IL_ContactName";
            Edit_AD2_IL_State = "NY";
            Edit_AD2_IL_Address1 = "Edit_AD2_IL_Address1";
            Edit_AD2_IL_Address2 = "Edit_AD2_IL_Address2";
            Edit_AD2_IL_City = "Edit_AD2_IL_City";
            Edit_AD2_IL_Zipcode = "20006";
            Edit_AD2_IL_PhoneUseType = "Business";
            Edit_AD2_IL_PhoneType = "VOIP";
            Edit_AD2_IL_PhoneSource = "Caller ID";
            Edit_AD2_IL_PhoneNumber = "9600095004";
            Edit_AD2_IL_EmailUseType = "Personal";
            Edit_AD2_IL_EmailSource = "Direct";
            Edit_AD2_IL_email = "Editad2ilemail@gmail.com";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Edit_Advesre2_Driver_Insurance_Information Instance
        {
            get { return instance; }
        }

#region Variables

        string _AD2_IL_InsuranceCompany;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_InsuranceCompany.
        /// </summary>
        [TestVariable("575cde99-a272-4cf0-9c03-58681da136f1")]
        public string AD2_IL_InsuranceCompany
        {
            get { return _AD2_IL_InsuranceCompany; }
            set { _AD2_IL_InsuranceCompany = value; }
        }

        string _AD2_IL_PolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_PolicyNumber.
        /// </summary>
        [TestVariable("bab28a8b-b852-4b31-b862-e340b3ae7e3a")]
        public string AD2_IL_PolicyNumber
        {
            get { return _AD2_IL_PolicyNumber; }
            set { _AD2_IL_PolicyNumber = value; }
        }

        string _AD2_IL_ClaimNumber;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_ClaimNumber.
        /// </summary>
        [TestVariable("7e0ab606-1365-4ea3-8cc5-89c3e53ac2fd")]
        public string AD2_IL_ClaimNumber
        {
            get { return _AD2_IL_ClaimNumber; }
            set { _AD2_IL_ClaimNumber = value; }
        }

        string _AD2_IL_ContactName;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_ContactName.
        /// </summary>
        [TestVariable("f35183f5-748b-44c7-b4ca-b6e80e8db318")]
        public string AD2_IL_ContactName
        {
            get { return _AD2_IL_ContactName; }
            set { _AD2_IL_ContactName = value; }
        }

        string _AD2_IL_State;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_State.
        /// </summary>
        [TestVariable("924ae2ac-f21d-4220-b328-64b40eb44adf")]
        public string AD2_IL_State
        {
            get { return _AD2_IL_State; }
            set { _AD2_IL_State = value; }
        }

        string _AD2_IL_Address1;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_Address1.
        /// </summary>
        [TestVariable("47f8fc7b-9651-4478-aa5c-5fa3b0f55001")]
        public string AD2_IL_Address1
        {
            get { return _AD2_IL_Address1; }
            set { _AD2_IL_Address1 = value; }
        }

        string _AD2_IL_Address2;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_Address2.
        /// </summary>
        [TestVariable("8eb9093d-4614-4300-b953-f5213def9291")]
        public string AD2_IL_Address2
        {
            get { return _AD2_IL_Address2; }
            set { _AD2_IL_Address2 = value; }
        }

        string _AD2_IL_City;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_City.
        /// </summary>
        [TestVariable("176cbd2b-813b-43df-990b-cb5beadd2756")]
        public string AD2_IL_City
        {
            get { return _AD2_IL_City; }
            set { _AD2_IL_City = value; }
        }

        string _AD2_IL_Zipcode;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_Zipcode.
        /// </summary>
        [TestVariable("d474b383-3d32-4850-9499-112b4a2dc1d4")]
        public string AD2_IL_Zipcode
        {
            get { return _AD2_IL_Zipcode; }
            set { _AD2_IL_Zipcode = value; }
        }

        string _AD2_IL_PhoneUseType;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_PhoneUseType.
        /// </summary>
        [TestVariable("8a3a7530-ead7-4820-b547-bf168003ef26")]
        public string AD2_IL_PhoneUseType
        {
            get { return _AD2_IL_PhoneUseType; }
            set { _AD2_IL_PhoneUseType = value; }
        }

        string _AD2_IL_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_PhoneType.
        /// </summary>
        [TestVariable("6447e404-f394-454e-86f2-7ee8a5875ff8")]
        public string AD2_IL_PhoneType
        {
            get { return _AD2_IL_PhoneType; }
            set { _AD2_IL_PhoneType = value; }
        }

        string _AD2_IL_PhoneSource;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_PhoneSource.
        /// </summary>
        [TestVariable("2dca0a9c-57d7-4f86-b8ef-127995ff6b3f")]
        public string AD2_IL_PhoneSource
        {
            get { return _AD2_IL_PhoneSource; }
            set { _AD2_IL_PhoneSource = value; }
        }

        string _AD2_IL_PhoneNumber;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_PhoneNumber.
        /// </summary>
        [TestVariable("e2376fc5-eb66-44bb-96e0-e02d11e92ebe")]
        public string AD2_IL_PhoneNumber
        {
            get { return _AD2_IL_PhoneNumber; }
            set { _AD2_IL_PhoneNumber = value; }
        }

        string _AD2_IL_EmailUseType;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_EmailUseType.
        /// </summary>
        [TestVariable("bf795e8f-32d4-4d2a-8d57-9a56d0808582")]
        public string AD2_IL_EmailUseType
        {
            get { return _AD2_IL_EmailUseType; }
            set { _AD2_IL_EmailUseType = value; }
        }

        string _AD2_IL_EmailSource;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_EmailSource.
        /// </summary>
        [TestVariable("aa393764-6208-4820-86e4-1c42f26ed6e0")]
        public string AD2_IL_EmailSource
        {
            get { return _AD2_IL_EmailSource; }
            set { _AD2_IL_EmailSource = value; }
        }

        string _AD2_IL_email;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_email.
        /// </summary>
        [TestVariable("bdfc8a2b-0b91-479d-83bd-bee0272c02c6")]
        public string AD2_IL_email
        {
            get { return _AD2_IL_email; }
            set { _AD2_IL_email = value; }
        }

        string _Edit_AD2_IL_InsuranceCompany;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_InsuranceCompany.
        /// </summary>
        [TestVariable("5ec2b668-c31b-46b3-a274-729f3f9f6298")]
        public string Edit_AD2_IL_InsuranceCompany
        {
            get { return _Edit_AD2_IL_InsuranceCompany; }
            set { _Edit_AD2_IL_InsuranceCompany = value; }
        }

        string _Edit_AD2_IL_PolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_PolicyNumber.
        /// </summary>
        [TestVariable("94366ac9-a472-4272-b3d6-51223d01bbf2")]
        public string Edit_AD2_IL_PolicyNumber
        {
            get { return _Edit_AD2_IL_PolicyNumber; }
            set { _Edit_AD2_IL_PolicyNumber = value; }
        }

        string _Edit_AD2_IL_ClaimNumber;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_ClaimNumber.
        /// </summary>
        [TestVariable("c1e06a4d-6cc1-4dac-b07a-89820ca4a617")]
        public string Edit_AD2_IL_ClaimNumber
        {
            get { return _Edit_AD2_IL_ClaimNumber; }
            set { _Edit_AD2_IL_ClaimNumber = value; }
        }

        string _Edit_AD2_IL_ContactName;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_ContactName.
        /// </summary>
        [TestVariable("968e46ed-5efb-455b-95df-ab510e12c6e1")]
        public string Edit_AD2_IL_ContactName
        {
            get { return _Edit_AD2_IL_ContactName; }
            set { _Edit_AD2_IL_ContactName = value; }
        }

        string _Edit_AD2_IL_State;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_State.
        /// </summary>
        [TestVariable("1d8fd652-c642-45e3-b3e6-2532a1d527ec")]
        public string Edit_AD2_IL_State
        {
            get { return _Edit_AD2_IL_State; }
            set { _Edit_AD2_IL_State = value; }
        }

        string _Edit_AD2_IL_Address1;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_Address1.
        /// </summary>
        [TestVariable("cf9c74a2-8068-4321-b9b3-c8247f146054")]
        public string Edit_AD2_IL_Address1
        {
            get { return _Edit_AD2_IL_Address1; }
            set { _Edit_AD2_IL_Address1 = value; }
        }

        string _Edit_AD2_IL_Address2;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_Address2.
        /// </summary>
        [TestVariable("9c8353c3-2e73-4e43-93de-fea8eb35f067")]
        public string Edit_AD2_IL_Address2
        {
            get { return _Edit_AD2_IL_Address2; }
            set { _Edit_AD2_IL_Address2 = value; }
        }

        string _Edit_AD2_IL_City;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_City.
        /// </summary>
        [TestVariable("4bafd05b-6048-4e7f-aa06-7cda37dd7b05")]
        public string Edit_AD2_IL_City
        {
            get { return _Edit_AD2_IL_City; }
            set { _Edit_AD2_IL_City = value; }
        }

        string _Edit_AD2_IL_Zipcode;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_Zipcode.
        /// </summary>
        [TestVariable("6dc95e13-48c2-4c98-8eb8-10ed24ec3b93")]
        public string Edit_AD2_IL_Zipcode
        {
            get { return _Edit_AD2_IL_Zipcode; }
            set { _Edit_AD2_IL_Zipcode = value; }
        }

        string _Edit_AD2_IL_PhoneUseType;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_PhoneUseType.
        /// </summary>
        [TestVariable("c01478fd-f831-4e13-8105-a754715c8519")]
        public string Edit_AD2_IL_PhoneUseType
        {
            get { return _Edit_AD2_IL_PhoneUseType; }
            set { _Edit_AD2_IL_PhoneUseType = value; }
        }

        string _Edit_AD2_IL_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_PhoneType.
        /// </summary>
        [TestVariable("2beec9ba-d39a-4ee1-8227-0b67915efb55")]
        public string Edit_AD2_IL_PhoneType
        {
            get { return _Edit_AD2_IL_PhoneType; }
            set { _Edit_AD2_IL_PhoneType = value; }
        }

        string _Edit_AD2_IL_PhoneSource;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_PhoneSource.
        /// </summary>
        [TestVariable("80f9f89a-4478-4837-897d-1faa29339d9e")]
        public string Edit_AD2_IL_PhoneSource
        {
            get { return _Edit_AD2_IL_PhoneSource; }
            set { _Edit_AD2_IL_PhoneSource = value; }
        }

        string _Edit_AD2_IL_PhoneNumber;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_PhoneNumber.
        /// </summary>
        [TestVariable("7b3788b9-b7c0-47df-9c67-a52a5e901778")]
        public string Edit_AD2_IL_PhoneNumber
        {
            get { return _Edit_AD2_IL_PhoneNumber; }
            set { _Edit_AD2_IL_PhoneNumber = value; }
        }

        string _Edit_AD2_IL_EmailUseType;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_EmailUseType.
        /// </summary>
        [TestVariable("a9278ef3-a4f2-45ec-b27e-2db902f82c7a")]
        public string Edit_AD2_IL_EmailUseType
        {
            get { return _Edit_AD2_IL_EmailUseType; }
            set { _Edit_AD2_IL_EmailUseType = value; }
        }

        string _Edit_AD2_IL_EmailSource;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_EmailSource.
        /// </summary>
        [TestVariable("9c070088-737e-42ba-b068-d55998b7ab07")]
        public string Edit_AD2_IL_EmailSource
        {
            get { return _Edit_AD2_IL_EmailSource; }
            set { _Edit_AD2_IL_EmailSource = value; }
        }

        string _Edit_AD2_IL_email;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD2_IL_email.
        /// </summary>
        [TestVariable("93157be4-caf6-49b7-9daa-bfc9176135b3")]
        public string Edit_AD2_IL_email
        {
            get { return _Edit_AD2_IL_email; }
            set { _Edit_AD2_IL_email = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(0));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_InsuranceCompany) on item 'ApplicationUnderTest.AD2_IL_CompanyName'.", repo.ApplicationUnderTest.AD2_IL_CompanyNameInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_CompanyNameInfo, "TagValue", AD2_IL_InsuranceCompany);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_InsuranceCompany, new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD2_IL_InsuranceCompany' with focus on 'ApplicationUnderTest.AD2_IL_CompanyName'.", repo.ApplicationUnderTest.AD2_IL_CompanyNameInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.AD2_IL_CompanyName.PressKeys(Edit_AD2_IL_InsuranceCompany);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_PolicyNumber) on item 'ApplicationUnderTest.AD2_IL_PolicyNumber'.", repo.ApplicationUnderTest.AD2_IL_PolicyNumberInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_PolicyNumberInfo, "TagValue", AD2_IL_PolicyNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_PolicyNumber, new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(8));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(9));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD2_IL_PolicyNumber' with focus on 'ApplicationUnderTest.AD2_IL_PolicyNumber'.", repo.ApplicationUnderTest.AD2_IL_PolicyNumberInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.AD2_IL_PolicyNumber.PressKeys(Edit_AD2_IL_PolicyNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_ClaimNumber) on item 'ApplicationUnderTest.AD2_IL_ClaimNumber'.", repo.ApplicationUnderTest.AD2_IL_ClaimNumberInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_ClaimNumberInfo, "TagValue", AD2_IL_ClaimNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_ClaimNumber, new RecordItemIndex(12));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(13));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(14));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD2_IL_ClaimNumber' with focus on 'ApplicationUnderTest.AD2_IL_ClaimNumber'.", repo.ApplicationUnderTest.AD2_IL_ClaimNumberInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.AD2_IL_ClaimNumber.PressKeys(Edit_AD2_IL_ClaimNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_ContactName) on item 'ApplicationUnderTest.AD2_IL_ContactName'.", repo.ApplicationUnderTest.AD2_IL_ContactNameInfo, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_ContactNameInfo, "TagValue", AD2_IL_ContactName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_ContactName, new RecordItemIndex(17));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(18));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(19));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD2_IL_ContactName' with focus on 'ApplicationUnderTest.AD2_IL_ContactName'.", repo.ApplicationUnderTest.AD2_IL_ContactNameInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.AD2_IL_ContactName.PressKeys(Edit_AD2_IL_ContactName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_State) on item 'ApplicationUnderTest.AD2_IL_State'.", repo.ApplicationUnderTest.AD2_IL_StateInfo, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_StateInfo, "TagValue", AD2_IL_State);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_State, new RecordItemIndex(22));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(23));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(24));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AD2_IL_State' on item 'ApplicationUnderTest.AD2_IL_State'.", repo.ApplicationUnderTest.AD2_IL_StateInfo, new RecordItemIndex(25));
            repo.ApplicationUnderTest.AD2_IL_State.Element.SetAttributeValue("TagValue", Edit_AD2_IL_State);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_Address1) on item 'ApplicationUnderTest.AD2_IL_Address1'.", repo.ApplicationUnderTest.AD2_IL_Address1Info, new RecordItemIndex(26));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_Address1Info, "TagValue", AD2_IL_Address1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_Address1, new RecordItemIndex(27));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(28));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(29));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD2_IL_Address1' with focus on 'ApplicationUnderTest.AD2_IL_Address1'.", repo.ApplicationUnderTest.AD2_IL_Address1Info, new RecordItemIndex(30));
            repo.ApplicationUnderTest.AD2_IL_Address1.PressKeys(Edit_AD2_IL_Address1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_Address2) on item 'ApplicationUnderTest.AD2_IL_Address2'.", repo.ApplicationUnderTest.AD2_IL_Address2Info, new RecordItemIndex(31));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_Address2Info, "TagValue", AD2_IL_Address2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_Address2, new RecordItemIndex(32));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(33));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(34));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD2_IL_Address2' with focus on 'ApplicationUnderTest.AD2_IL_Address2'.", repo.ApplicationUnderTest.AD2_IL_Address2Info, new RecordItemIndex(35));
            repo.ApplicationUnderTest.AD2_IL_Address2.PressKeys(Edit_AD2_IL_Address2);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(36));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_City) on item 'ApplicationUnderTest.AD2_IL_City'.", repo.ApplicationUnderTest.AD2_IL_CityInfo, new RecordItemIndex(37));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_CityInfo, "TagValue", AD2_IL_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_City, new RecordItemIndex(38));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(39));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(40));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD2_IL_City' with focus on 'ApplicationUnderTest.AD2_IL_City'.", repo.ApplicationUnderTest.AD2_IL_CityInfo, new RecordItemIndex(41));
            repo.ApplicationUnderTest.AD2_IL_City.PressKeys(Edit_AD2_IL_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD2_IL_Zipcode' and assigning its value to variable 'AD2_IL_Zipcode'.", repo.ApplicationUnderTest.AD2_IL_ZipcodeInfo, new RecordItemIndex(42));
            AD2_IL_Zipcode = repo.ApplicationUnderTest.AD2_IL_Zipcode.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_Zipcode) on item 'ApplicationUnderTest.AD2_IL_Zipcode'.", repo.ApplicationUnderTest.AD2_IL_ZipcodeInfo, new RecordItemIndex(43));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_ZipcodeInfo, "TagValue", AD2_IL_Zipcode);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", "", new RecordItemIndex(44));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(45));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(46));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD2_IL_Zipcode' with focus on 'ApplicationUnderTest.AD2_IL_Zipcode'.", repo.ApplicationUnderTest.AD2_IL_ZipcodeInfo, new RecordItemIndex(47));
            repo.ApplicationUnderTest.AD2_IL_Zipcode.PressKeys(Edit_AD2_IL_Zipcode);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_PhoneUseType) on item 'ApplicationUnderTest.AD2_IL_PhoneUseType'.", repo.ApplicationUnderTest.AD2_IL_PhoneUseTypeInfo, new RecordItemIndex(48));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_PhoneUseTypeInfo, "TagValue", AD2_IL_PhoneUseType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_PhoneUseType, new RecordItemIndex(49));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(50));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(51));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AD2_IL_PhoneUseType' on item 'ApplicationUnderTest.AD2_IL_PhoneUseType'.", repo.ApplicationUnderTest.AD2_IL_PhoneUseTypeInfo, new RecordItemIndex(52));
            repo.ApplicationUnderTest.AD2_IL_PhoneUseType.Element.SetAttributeValue("TagValue", Edit_AD2_IL_PhoneUseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_PhoneType) on item 'ApplicationUnderTest.AD2_IL_PhoneType'.", repo.ApplicationUnderTest.AD2_IL_PhoneTypeInfo, new RecordItemIndex(53));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_PhoneTypeInfo, "TagValue", AD2_IL_PhoneType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_PhoneType, new RecordItemIndex(54));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(55));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(56));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AD2_IL_PhoneType' on item 'ApplicationUnderTest.AD2_IL_PhoneType'.", repo.ApplicationUnderTest.AD2_IL_PhoneTypeInfo, new RecordItemIndex(57));
            repo.ApplicationUnderTest.AD2_IL_PhoneType.Element.SetAttributeValue("TagValue", Edit_AD2_IL_PhoneType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_PhoneSource) on item 'ApplicationUnderTest.AD2_IL_PhoneSource'.", repo.ApplicationUnderTest.AD2_IL_PhoneSourceInfo, new RecordItemIndex(58));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_PhoneSourceInfo, "TagValue", AD2_IL_PhoneSource);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_PhoneSource, new RecordItemIndex(59));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(60));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(61));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AD2_IL_PhoneSource' on item 'ApplicationUnderTest.AD2_IL_PhoneSource'.", repo.ApplicationUnderTest.AD2_IL_PhoneSourceInfo, new RecordItemIndex(62));
            repo.ApplicationUnderTest.AD2_IL_PhoneSource.Element.SetAttributeValue("TagValue", Edit_AD2_IL_PhoneSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD2_IL_PhoneNumber' and assigning its value to variable 'AD2_IL_PhoneNumber'.", repo.ApplicationUnderTest.AD2_IL_PhoneNumberInfo, new RecordItemIndex(63));
            AD2_IL_PhoneNumber = repo.ApplicationUnderTest.AD2_IL_PhoneNumber.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_PhoneNumber) on item 'ApplicationUnderTest.AD2_IL_PhoneNumber'.", repo.ApplicationUnderTest.AD2_IL_PhoneNumberInfo, new RecordItemIndex(64));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_PhoneNumberInfo, "TagValue", AD2_IL_PhoneNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_PhoneNumber, new RecordItemIndex(65));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(66));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(67));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD2_IL_PhoneNumber' with focus on 'ApplicationUnderTest.AD2_IL_PhoneNumber'.", repo.ApplicationUnderTest.AD2_IL_PhoneNumberInfo, new RecordItemIndex(68));
            repo.ApplicationUnderTest.AD2_IL_PhoneNumber.PressKeys(Edit_AD2_IL_PhoneNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_EmailUseType) on item 'ApplicationUnderTest.AD2_IL_EmailUseType'.", repo.ApplicationUnderTest.AD2_IL_EmailUseTypeInfo, new RecordItemIndex(69));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_EmailUseTypeInfo, "TagValue", AD2_IL_EmailUseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_EmailUseType, new RecordItemIndex(70));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(71));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(72));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AD2_IL_EmailUseType' on item 'ApplicationUnderTest.AD2_IL_EmailUseType'.", repo.ApplicationUnderTest.AD2_IL_EmailUseTypeInfo, new RecordItemIndex(73));
            repo.ApplicationUnderTest.AD2_IL_EmailUseType.Element.SetAttributeValue("TagValue", Edit_AD2_IL_EmailUseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_EmailSource) on item 'ApplicationUnderTest.AD2_IL_EmailSource'.", repo.ApplicationUnderTest.AD2_IL_EmailSourceInfo, new RecordItemIndex(74));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_EmailSourceInfo, "TagValue", AD2_IL_EmailSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_EmailSource, new RecordItemIndex(75));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(76));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(77));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AD2_IL_EmailSource' on item 'ApplicationUnderTest.AD2_IL_EmailSource'.", repo.ApplicationUnderTest.AD2_IL_EmailSourceInfo, new RecordItemIndex(78));
            repo.ApplicationUnderTest.AD2_IL_EmailSource.Element.SetAttributeValue("TagValue", Edit_AD2_IL_EmailSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_email) on item 'ApplicationUnderTest.AD2_IL_email'.", repo.ApplicationUnderTest.AD2_IL_emailInfo, new RecordItemIndex(79));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_emailInfo, "TagValue", AD2_IL_email);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_email, new RecordItemIndex(80));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(81));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(82));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD2_IL_email' with focus on 'ApplicationUnderTest.AD2_IL_email'.", repo.ApplicationUnderTest.AD2_IL_emailInfo, new RecordItemIndex(83));
            repo.ApplicationUnderTest.AD2_IL_email.PressKeys(Edit_AD2_IL_email);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(84));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Save_Button' at 6;8.", repo.ApplicationUnderTest.Save_ButtonInfo, new RecordItemIndex(85));
            repo.ApplicationUnderTest.Save_Button.Click("6;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_InsuranceCompany) on item 'ApplicationUnderTest.AD2_IL_CompanyName'.", repo.ApplicationUnderTest.AD2_IL_CompanyNameInfo, new RecordItemIndex(86));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_CompanyNameInfo, "TagValue", Edit_AD2_IL_InsuranceCompany);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_InsuranceCompany, new RecordItemIndex(87));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_PolicyNumber) on item 'ApplicationUnderTest.AD2_IL_PolicyNumber'.", repo.ApplicationUnderTest.AD2_IL_PolicyNumberInfo, new RecordItemIndex(88));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_PolicyNumberInfo, "TagValue", Edit_AD2_IL_PolicyNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_PolicyNumber, new RecordItemIndex(89));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_ClaimNumber) on item 'ApplicationUnderTest.AD2_IL_ClaimNumber'.", repo.ApplicationUnderTest.AD2_IL_ClaimNumberInfo, new RecordItemIndex(90));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_ClaimNumberInfo, "TagValue", Edit_AD2_IL_ClaimNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_ClaimNumber, new RecordItemIndex(91));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_ContactName) on item 'ApplicationUnderTest.AD2_IL_ContactName'.", repo.ApplicationUnderTest.AD2_IL_ContactNameInfo, new RecordItemIndex(92));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_ContactNameInfo, "TagValue", Edit_AD2_IL_ContactName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_ContactName, new RecordItemIndex(93));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_State) on item 'ApplicationUnderTest.AD2_IL_State'.", repo.ApplicationUnderTest.AD2_IL_StateInfo, new RecordItemIndex(94));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_StateInfo, "TagValue", Edit_AD2_IL_State);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_State, new RecordItemIndex(95));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_Address1) on item 'ApplicationUnderTest.AD2_IL_Address1'.", repo.ApplicationUnderTest.AD2_IL_Address1Info, new RecordItemIndex(96));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_Address1Info, "TagValue", Edit_AD2_IL_Address1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_State, new RecordItemIndex(97));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_Address2) on item 'ApplicationUnderTest.AD2_IL_Address2'.", repo.ApplicationUnderTest.AD2_IL_Address2Info, new RecordItemIndex(98));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_Address2Info, "TagValue", Edit_AD2_IL_Address2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_Address2, new RecordItemIndex(99));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_City) on item 'ApplicationUnderTest.AD2_IL_City'.", repo.ApplicationUnderTest.AD2_IL_CityInfo, new RecordItemIndex(100));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_CityInfo, "TagValue", Edit_AD2_IL_City);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_City, new RecordItemIndex(101));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_Zipcode) on item 'ApplicationUnderTest.AD2_IL_Zipcode'.", repo.ApplicationUnderTest.AD2_IL_ZipcodeInfo, new RecordItemIndex(102));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_ZipcodeInfo, "TagValue", Edit_AD2_IL_Zipcode);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_Zipcode, new RecordItemIndex(103));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_PhoneUseType) on item 'ApplicationUnderTest.AD2_PI_UseType'.", repo.ApplicationUnderTest.AD2_PI_UseTypeInfo, new RecordItemIndex(104));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_PI_UseTypeInfo, "TagValue", Edit_AD2_IL_PhoneUseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_PhoneUseType, new RecordItemIndex(105));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_PhoneType) on item 'ApplicationUnderTest.AD2_PI_PhoneType'.", repo.ApplicationUnderTest.AD2_PI_PhoneTypeInfo, new RecordItemIndex(106));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_PI_PhoneTypeInfo, "TagValue", Edit_AD2_IL_PhoneType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_PhoneType, new RecordItemIndex(107));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_PhoneSource) on item 'ApplicationUnderTest.AD2_PI_Source'.", repo.ApplicationUnderTest.AD2_PI_SourceInfo, new RecordItemIndex(108));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_PI_SourceInfo, "TagValue", Edit_AD2_IL_PhoneSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_PhoneSource, new RecordItemIndex(109));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_PhoneNumber) on item 'ApplicationUnderTest.AD2_PI_PhoneNumber'.", repo.ApplicationUnderTest.AD2_PI_PhoneNumberInfo, new RecordItemIndex(110));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_PI_PhoneNumberInfo, "TagValue", Edit_AD2_IL_PhoneNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_PhoneNumber, new RecordItemIndex(111));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_EmailUseType) on item 'ApplicationUnderTest.AD2_PI_EmailUseType'.", repo.ApplicationUnderTest.AD2_PI_EmailUseTypeInfo, new RecordItemIndex(112));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_PI_EmailUseTypeInfo, "TagValue", Edit_AD2_IL_EmailUseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_EmailUseType, new RecordItemIndex(113));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_EmailSource) on item 'ApplicationUnderTest.AD2_PI_EmailSource'.", repo.ApplicationUnderTest.AD2_PI_EmailSourceInfo, new RecordItemIndex(114));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_PI_EmailSourceInfo, "TagValue", Edit_AD2_IL_EmailSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_EmailSource, new RecordItemIndex(115));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD2_IL_email) on item 'ApplicationUnderTest.AD2_PI_EmailID'.", repo.ApplicationUnderTest.AD2_PI_EmailIDInfo, new RecordItemIndex(116));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_PI_EmailIDInfo, "TagValue", Edit_AD2_IL_email);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD2_IL_email, new RecordItemIndex(117));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SubmitButton1' at 46;15.", repo.ApplicationUnderTest.SubmitButton1Info, new RecordItemIndex(118));
            repo.ApplicationUnderTest.SubmitButton1.Click("46;15");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
